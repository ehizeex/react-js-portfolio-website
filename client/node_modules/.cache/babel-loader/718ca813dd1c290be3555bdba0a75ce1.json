{"ast":null,"code":"var _jsxFileName = \"/Users/ehizeex/Desktop/PORTFOLIOCLONE/Rahul_Malik_Portfolio-release-Production/frontend/src/portfolio-container/ContactMe/ContactMe.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport ScreenHeading from '../../utilities/ScreenHeading/ScreenHeading';\nimport Footer from '../Footer/Footer';\nimport ScrollService from '../../utilities/ScrollService';\nimport Animations from '../../utilities/Animations';\nimport * as httpClient from '../../services/api-services/common-service';\nimport { apiUrls } from '../../services/api-services/api-urls';\nimport './ContactMe.css';\n\nconst ContactMe = props => {\n  /* HOOKS TO BE USED */\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n  const [disabledSubmitButton, setDisabledSubmitButton] = useState(false);\n\n  let fadeInScreenHandler = screen => {\n    if (screen.fadeInScreen !== props.id) return;\n    Animations.animations.fadeInScreen(props.id);\n  };\n\n  const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n\n  const getFormFields = () => {\n    /*\n     FORM STATIC DATA */\n    let textFieldOptions = {\n      your_name: {\n        type: 'input',\n        placeholder: 'Your Name',\n        name: 'name',\n        validations: {\n          required: 'Your Name is required'\n        }\n      },\n      your_email: {\n        type: 'input',\n        placeholder: 'Your Email Address',\n        name: 'email',\n        validations: {\n          required: 'Your Email Address is required',\n          pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        }\n      },\n      subject: {\n        type: 'input',\n        placeholder: 'Subject',\n        name: 'subject',\n        validations: {\n          required: 'Subject is required'\n        }\n      },\n      your_message: {\n        type: 'text-area',\n        placeholder: 'Your message',\n        name: 'message',\n        validations: {\n          required: 'Your message is required'\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: textFieldOptions.your_name.placeholder,\n      ref: register(textFieldOptions.your_name.validations),\n      name: textFieldOptions.your_name.name,\n      className: `text-field ${errors[textFieldOptions.your_name.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }), errors[textFieldOptions.your_name.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 70\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 105\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 143\n      }\n    }, \" \", errors[textFieldOptions.your_name.name].message), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: textFieldOptions.your_email.placeholder,\n      ref: register(textFieldOptions.your_email.validations),\n      name: textFieldOptions.your_email.name,\n      className: `text-field ${errors[textFieldOptions.your_email.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }), errors[textFieldOptions.your_email.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 71\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 106\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 144\n      }\n    }, \" \", errors[textFieldOptions.your_email.name].message), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 211\n      }\n    }, \" \", errors[textFieldOptions.your_email.name] && !errors[textFieldOptions.your_email.name].message ? 'Email is invalid' : '', \" \"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: textFieldOptions.subject.placeholder,\n      ref: register(textFieldOptions.subject.validations),\n      name: textFieldOptions.subject.name,\n      className: `text-field ${errors[textFieldOptions.subject.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), errors[textFieldOptions.subject.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 68\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 103\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 141\n      }\n    }, \" \", errors[textFieldOptions.subject.name].message), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container text-area-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: textFieldOptions.your_message.placeholder,\n      ref: register(textFieldOptions.your_message.validations),\n      name: textFieldOptions.your_message.name,\n      className: `text-field text-field-area ${errors[textFieldOptions.your_message.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), errors[textFieldOptions.your_message.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 73\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 108\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 146\n      }\n    }, \" \", errors[textFieldOptions.your_message.name].message), \" \")));\n  };\n\n  const handleFormSubmission = data => {\n    setDisabledSubmitButton(true);\n    httpClient.default.postRequest(apiUrls['contact-me'], data).then(result => {\n      setDisabledSubmitButton(false);\n      reset();\n    }).catch(err => {\n      setDisabledSubmitButton(false);\n    });\n  };\n\n  useEffect(() => {\n    return () => {\n      /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n      fadeInSubscription.unsubscribe();\n    };\n  }, [fadeInSubscription]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-me-container fade-in\",\n    id: props.id || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeading, {\n    subHeading: \"Let's Keep In Touch\",\n    title: props.screenName ? props.screenName : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-me-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-me-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Get in Touch\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmission),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, getFormFields(), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disabledSubmitButton,\n    className: 'contact-me-submit-btn primary-btn' + (disabledSubmitButton ? ' disable-submit-btn' : ''),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default ContactMe;","map":{"version":3,"sources":["/Users/ehizeex/Desktop/PORTFOLIOCLONE/Rahul_Malik_Portfolio-release-Production/frontend/src/portfolio-container/ContactMe/ContactMe.js"],"names":["React","useEffect","useState","useForm","ScreenHeading","Footer","ScrollService","Animations","httpClient","apiUrls","ContactMe","props","register","handleSubmit","reset","errors","disabledSubmitButton","setDisabledSubmitButton","fadeInScreenHandler","screen","fadeInScreen","id","animations","fadeInSubscription","currentScreenFadeIn","subscribe","getFormFields","textFieldOptions","your_name","type","placeholder","name","validations","required","your_email","pattern","subject","your_message","message","handleFormSubmission","data","default","postRequest","then","result","catch","err","unsubscribe","screenName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport ScreenHeading from '../../utilities/ScreenHeading/ScreenHeading'\nimport Footer from '../Footer/Footer';\nimport ScrollService from '../../utilities/ScrollService';\nimport Animations from '../../utilities/Animations';\nimport * as httpClient from '../../services/api-services/common-service';\nimport { apiUrls } from '../../services/api-services/api-urls';\nimport './ContactMe.css'\n\nconst ContactMe = (props) => {\n\n    /* HOOKS TO BE USED */\n    const { register, handleSubmit, reset, errors } = useForm();\n    const [disabledSubmitButton, setDisabledSubmitButton] = useState(false);\n\n    let fadeInScreenHandler = (screen) => {\n    if(screen.fadeInScreen !== props.id)\n    return;\n\n    Animations.animations.fadeInScreen(props.id);\n    };\n    const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n\n    const getFormFields = () => {\n        /*\n         FORM STATIC DATA */\n        let textFieldOptions = { your_name: { type: 'input', placeholder: 'Your Name', name: 'name', validations: { required: 'Your Name is required' } },\n                                 your_email: { type: 'input', placeholder: 'Your Email Address', name: 'email', validations: { required: 'Your Email Address is required', pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ } },\n                                 subject: { type: 'input', placeholder: 'Subject', name: 'subject', validations: { required: 'Subject is required' } },\n                                 your_message: { type: 'text-area', placeholder: 'Your message', name: 'message', validations: { required: 'Your message is required' } }};   \n                            \n        return (\n            <div className=\"form-field-container\">\n                <div className=\"text-field-container\">\n                        <input type=\"text\" placeholder={textFieldOptions.your_name.placeholder} ref={register(textFieldOptions.your_name.validations)} name={textFieldOptions.your_name.name} className={`text-field ${ errors[textFieldOptions.your_name.name] ? 'red-border' : ''}`} />\n                        { errors[textFieldOptions.your_name.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_name.name].message }</span> </div> }\n                </div>\n                <div className=\"text-field-container\">\n                        <input type=\"text\" placeholder={textFieldOptions.your_email.placeholder} ref={register(textFieldOptions.your_email.validations)} name={textFieldOptions.your_email.name} className={`text-field ${ errors[textFieldOptions.your_email.name] ? 'red-border' : ''}`} />\n                        { errors[textFieldOptions.your_email.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_email.name].message }</span> <span> { (errors[textFieldOptions.your_email.name] && !errors[textFieldOptions.your_email.name].message) ? 'Email is invalid' : '' } </span> </div> }\n                </div>\n                <div className=\"text-field-container\">\n                        <input type=\"text\" placeholder={textFieldOptions.subject.placeholder} ref={register(textFieldOptions.subject.validations)} name={textFieldOptions.subject.name} className={`text-field ${ errors[textFieldOptions.subject.name] ? 'red-border' : ''}`} />\n                        { errors[textFieldOptions.subject.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.subject.name].message }</span> </div> }\n                </div>\n                <div className=\"text-field-container text-area-container\">\n                        <textarea placeholder={textFieldOptions.your_message.placeholder} ref={register(textFieldOptions.your_message.validations)} name={textFieldOptions.your_message.name} className={`text-field text-field-area ${ errors[textFieldOptions.your_message.name] ? 'red-border' : ''}`}></textarea>\n                        { errors[textFieldOptions.your_message.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_message.name].message }</span> </div> }\n                </div>\n            </div>\n        )\n    } \n\n\n    const handleFormSubmission = (data) => {\n        setDisabledSubmitButton(true);\n        httpClient.default.postRequest(apiUrls['contact-me'], data)\n        .then((result) => {\n            setDisabledSubmitButton(false);\n            reset();\n        })\n        .catch((err) => {\n            setDisabledSubmitButton(false);\n        });\n    }\n\n    useEffect(() => {\n        return () => {\n            /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n            fadeInSubscription.unsubscribe();\n        }\n    }, [fadeInSubscription]);\n\n    return (\n        <div className=\"contact-me-container fade-in\" id={ props.id || ''}>\n            <ScreenHeading subHeading={ \"Let's Keep In Touch\"} title={ (props.screenName) ? props.screenName : '' } />\n            <div>\n            <div className=\"contact-me-map\">\n                <div className=\"contact-me-form\">\n                    <div className=\"contact-form-heading\">\n                        <span>Get in Touch</span>\n                    </div>\n                    <form onSubmit={handleSubmit(handleFormSubmission)}>\n\n                        { getFormFields() }\n\n                        <button disabled={disabledSubmitButton} \n                        className={'contact-me-submit-btn primary-btn' + (disabledSubmitButton ? ' disable-submit-btn' : '')} \n                        type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            </div>\n            <Footer />\n            </div>\n        </div>\n    )\n}\n\nexport default ContactMe;\n"]},"metadata":{},"sourceType":"module"}