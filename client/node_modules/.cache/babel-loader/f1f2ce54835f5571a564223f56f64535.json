{"ast":null,"code":"var _jsxFileName = \"/Users/ehizeex/Desktop/PORTFOLIOCLONE/Rahul_Malik_Portfolio-release-Production/client/src/portfolio-container/ContactMe/ContactMe.js\";\nimport React, { useEffect, useState } from 'react';\nimport imgBack from \"../../../src/images/im4.jpg\";\nimport load1 from \"../../../src/images/load2.gif\";\nimport axios from \"axios\";\nimport ScreenHeading from '../../utilities/ScreenHeading/ScreenHeading';\nimport { toast } from \"react-toastify\";\nimport './ContactMe.css';\nimport ScrollService from '../../utilities/ScrollService';\nimport Animations from '../../utilities/Animations';\nimport Footer from '../Home/Footer/Footer';\n\nconst ContactMe = props => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n\n  let fadeInScreenHandler = screen => {\n    if (screen.fadeInScreen !== props.id) return;\n    Animations.animations.fadeInScreen(props.id);\n  };\n\n  const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [banner, setBanner] = useState(\"\");\n  const [bool, setBool] = useState(false);\n  useEffect(() => {\n    return () => {\n      /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n      fadeInSubscription.unsubscribe();\n    };\n  }, [fadeInSubscription]); // handle inputs\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const formSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let data = {\n        name,\n        email,\n        message\n      };\n      setBool(true);\n      const res = await axios.post(`/contact`, data);\n\n      if (name.length === 0 || email.length === 0 || message.length === 0) {\n        setBanner(res.data.msg);\n        toast.error(res.data.msg);\n        setBool(false);\n      } else if (res.status === 200) {\n        setBanner(res.data.msg);\n        toast.success(res.data.msg);\n        setBool(false);\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  let textFieldOptions = {\n    your_name: {\n      type: 'input',\n      placeholder: 'Your Name',\n      name: 'name',\n      validations: {\n        required: 'Your Name is required'\n      }\n    },\n    your_email: {\n      type: 'input',\n      placeholder: 'Your Email Address',\n      name: 'email',\n      validations: {\n        required: 'Your Email Address is required',\n        pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      }\n    },\n    subject: {\n      type: 'input',\n      placeholder: 'Subject',\n      name: 'subject',\n      validations: {\n        required: 'Subject is required'\n      }\n    },\n    your_message: {\n      type: 'text-area',\n      placeholder: 'Your message',\n      name: 'message',\n      validations: {\n        required: 'Your message is required'\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    id: props.id || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeading, {\n    subHeading: \"Let's Keep In Touch\",\n    title: props.screenName ? props.screenName : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Contact form\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Send your message\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: imgBack,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, banner), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: textFieldOptions.your_name.placeholder,\n    onChange: handleName,\n    value: name,\n    ref: register(textFieldOptions.your_name.validations),\n    name: textFieldOptions.your_name.name,\n    className: `text-field ${errors[textFieldOptions.your_name.name] ? 'red-border' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), errors[textFieldOptions.your_name.name] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 62\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 97\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 135\n    }\n  }, \" \", errors[textFieldOptions.your_name.name].message), \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    onChange: handleEmail,\n    value: email,\n    placeholder: \"your email...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    onChange: handleMessage,\n    value: message,\n    placeholder: \"your message...\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Send \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-paper-plane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 24\n    }\n  }), bool ? /*#__PURE__*/React.createElement(\"b\", {\n    className: \"load\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: load1,\n    alt: \"load1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  })) : \"\"))))));\n};\n\nexport default ContactMe;","map":{"version":3,"sources":["/Users/ehizeex/Desktop/PORTFOLIOCLONE/Rahul_Malik_Portfolio-release-Production/client/src/portfolio-container/ContactMe/ContactMe.js"],"names":["React","useEffect","useState","imgBack","load1","axios","ScreenHeading","toast","ScrollService","Animations","Footer","ContactMe","props","register","handleSubmit","reset","errors","useForm","fadeInScreenHandler","screen","fadeInScreen","id","animations","fadeInSubscription","currentScreenFadeIn","subscribe","name","setName","email","setEmail","message","setMessage","banner","setBanner","bool","setBool","unsubscribe","handleName","e","target","value","handleEmail","handleMessage","formSubmit","preventDefault","data","res","post","length","msg","error","status","success","err","console","log","textFieldOptions","your_name","type","placeholder","validations","required","your_email","pattern","subject","your_message","screenName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport imgBack from \"../../../src/images/im4.jpg\";\nimport load1 from \"../../../src/images/load2.gif\";\nimport axios from \"axios\";\nimport ScreenHeading from '../../utilities/ScreenHeading/ScreenHeading'\nimport { toast } from \"react-toastify\";\nimport './ContactMe.css'\nimport ScrollService from '../../utilities/ScrollService';\nimport Animations from '../../utilities/Animations';\nimport Footer from '../Home/Footer/Footer';\n\nconst ContactMe = (props) => {\n  \n  const { register, handleSubmit, reset, errors } = useForm();\n\n  let fadeInScreenHandler = (screen) => {\n    if(screen.fadeInScreen !== props.id)\n    return;\n\n    Animations.animations.fadeInScreen(props.id);\n    };\n    const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [banner, setBanner] = useState(\"\");\n    const [bool, setBool] = useState(false);\n  \n    useEffect(() => {\n      return () => {\n          /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n          fadeInSubscription.unsubscribe();\n      }\n  }, [fadeInSubscription]);\n\n    // handle inputs\n    const handleName = (e) => {\n      setName(e.target.value);\n    };\n  \n    const handleEmail = (e) => {\n      setEmail(e.target.value);\n    };\n  \n    const handleMessage = (e) => {\n      setMessage(e.target.value);\n    };\n  \n    const formSubmit = async (e) => {\n      e.preventDefault();\n  \n      \n      try {\n        let data = {\n          name,\n          email,\n          message,\n        };\n  \n        setBool(true);\n  \n        const res = await axios.post(`/contact`, data);\n  \n        if (name.length === 0 || email.length === 0 || message.length === 0) {\n          setBanner(res.data.msg);\n          toast.error(res.data.msg);\n          setBool(false);\n        } else if (res.status === 200) {\n          setBanner(res.data.msg);\n          toast.success(res.data.msg);\n          setBool(false);\n  \n          setName(\"\");\n          setEmail(\"\");\n          setMessage(\"\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  \n\n    let textFieldOptions = { your_name: { type: 'input', placeholder: 'Your Name', name: 'name', validations: { required: 'Your Name is required' } },\n    your_email: { type: 'input', placeholder: 'Your Email Address', name: 'email', validations: { required: 'Your Email Address is required', pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ } },\n    subject: { type: 'input', placeholder: 'Subject', name: 'subject', validations: { required: 'Subject is required' } },\n    your_message: { type: 'text-area', placeholder: 'Your message', name: 'message', validations: { required: 'Your message is required' } }};   \n\n    return (\n        <div className=\"main-container\" id={ props.id || ''}>\n          \n          <ScreenHeading subHeading={ \"Let's Keep In Touch\"} title={ (props.screenName) ? props.screenName : '' } />\n        <div className=\"central-form\">\n          <h2 className=\"title\">Contact form</h2>\n          <div className=\"back-form\">\n            <div className=\"img-back\">\n              <h4>Send your message</h4>\n              <img src={imgBack} alt=\"\" />\n            </div>\n            <form onSubmit={formSubmit}>\n              <p>{banner}</p>\n              <label htmlFor=\"name\">Name</label>\n              \n              \n                \n                <input type=\"text\" placeholder={textFieldOptions.your_name.placeholder} onChange={handleName}\n                value={name} ref={register(textFieldOptions.your_name.validations)} name={textFieldOptions.your_name.name} className={`text-field ${ errors[textFieldOptions.your_name.name] ? 'red-border' : ''}`} />\n                { errors[textFieldOptions.your_name.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_name.name].message }</span> </div> }\n            \n  \n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                onChange={handleEmail}\n                value={email}\n                placeholder=\"your email...\"\n              />\n  \n              <label htmlFor=\"message\">Message</label>\n              <textarea\n                type=\"text\"\n                onChange={handleMessage}\n                value={message}\n                placeholder=\"your message...\"\n                name=\"message\"\n              />\n  \n              <div className=\"send-btn\">\n                <button type=\"submit\">\n                  Send <i className=\"fas fa-paper-plane\"></i>\n                  {bool ? (\n                    <b className=\"load\">\n                      <img src={load1} alt=\"load1\" />\n                    </b>\n                  ) : (\n                    \"\"\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default ContactMe;\n"]},"metadata":{},"sourceType":"module"}