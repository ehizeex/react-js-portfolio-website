{"ast":null,"code":"var _jsxFileName = \"/Users/ehizeex/Desktop/PORTFOLIOCLONE/Rahul_Malik_Portfolio-release-Production/client/src/portfolio-container/ContactMe/ContactMe.js\";\nimport React, { useEffect, useState } from 'react';\nimport imgBack from \"../../../src/images/im4.jpg\";\nimport load1 from \"../../../src/images/load2.gif\";\nimport axios from \"axios\";\nimport ScreenHeading from '../../utilities/ScreenHeading/ScreenHeading';\nimport { toast } from \"react-toastify\";\nimport './ContactMe.css';\nimport ScrollService from '../../utilities/ScrollService';\nimport Animations from '../../utilities/Animations';\nimport Footer from '../Home/Footer/Footer';\nimport { useForm } from 'react-hook-form';\n\nconst ContactMe = props => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n  const [disabledSubmitButton, setDisabledSubmitButton] = useState(false);\n\n  let fadeInScreenHandler = screen => {\n    if (screen.fadeInScreen !== props.id) return;\n    Animations.animations.fadeInScreen(props.id);\n  };\n\n  const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [banner, setBanner] = useState(\"\");\n  const [bool, setBool] = useState(false);\n  useEffect(() => {\n    return () => {\n      /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n      fadeInSubscription.unsubscribe();\n    };\n  }, [fadeInSubscription]); // handle inputs\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const formSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let data = {\n        name,\n        email,\n        message\n      };\n      setBool(true);\n      const res = await axios.post(`/contact`, data);\n\n      if (name.length === 0 || email.length === 0 || message.length === 0) {\n        setBanner(res.data.msg);\n        toast.error(res.data.msg);\n        setBool(false);\n      } else if (res.status === 200) {\n        setBanner(res.data.msg);\n        toast.success(res.data.msg);\n        setBool(false);\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getFormFields = () => {\n    /*\n     FORM STATIC DATA */\n    let textFieldOptions = {\n      your_name: {\n        type: 'input',\n        placeholder: 'Your Name',\n        name: 'name',\n        validations: {\n          required: 'Your Name is required'\n        }\n      },\n      your_email: {\n        type: 'input',\n        placeholder: 'Your Email Address',\n        name: 'email',\n        validations: {\n          required: 'Your Email Address is required',\n          pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        }\n      },\n      subject: {\n        type: 'input',\n        placeholder: 'Subject',\n        name: 'subject',\n        validations: {\n          required: 'Subject is required'\n        }\n      },\n      your_message: {\n        type: 'text-area',\n        placeholder: 'Your message',\n        name: 'message',\n        validations: {\n          required: 'Your message is required'\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: textFieldOptions.your_name.placeholder,\n      ref: register(textFieldOptions.your_name.validations),\n      name: textFieldOptions.your_name.name,\n      className: `text-field ${errors[textFieldOptions.your_name.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }), errors[textFieldOptions.your_name.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 68\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 103\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 141\n      }\n    }, \" \", errors[textFieldOptions.your_name.name].message), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: textFieldOptions.your_email.placeholder,\n      ref: register(textFieldOptions.your_email.validations),\n      name: textFieldOptions.your_email.name,\n      className: `text-field ${errors[textFieldOptions.your_email.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }), errors[textFieldOptions.your_email.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 69\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 104\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 142\n      }\n    }, \" \", errors[textFieldOptions.your_email.name].message), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 209\n      }\n    }, \" \", errors[textFieldOptions.your_email.name] && !errors[textFieldOptions.your_email.name].message ? 'Email is invalid' : '', \" \"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: textFieldOptions.subject.placeholder,\n      ref: register(textFieldOptions.subject.validations),\n      name: textFieldOptions.subject.name,\n      className: `text-field ${errors[textFieldOptions.subject.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }), errors[textFieldOptions.subject.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 66\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 101\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 139\n      }\n    }, \" \", errors[textFieldOptions.subject.name].message), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-container text-area-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: textFieldOptions.your_message.placeholder,\n      ref: register(textFieldOptions.your_message.validations),\n      name: textFieldOptions.your_message.name,\n      className: `text-field text-field-area ${errors[textFieldOptions.your_message.name] ? 'red-border' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }), errors[textFieldOptions.your_message.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 71\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 106\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 144\n      }\n    }, \" \", errors[textFieldOptions.your_message.name].message), \" \")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-me-container fade-in\",\n    id: props.id || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeading, {\n    subHeading: \"Let's Keep In Touch\",\n    title: props.screenName ? props.screenName : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-me-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-me-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Get in Touch\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmission),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, getFormFields(), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disabledSubmitButton,\n    className: 'contact-me-submit-btn primary-btn' + (disabledSubmitButton ? ' disable-submit-btn' : ''),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default ContactMe;","map":{"version":3,"sources":["/Users/ehizeex/Desktop/PORTFOLIOCLONE/Rahul_Malik_Portfolio-release-Production/client/src/portfolio-container/ContactMe/ContactMe.js"],"names":["React","useEffect","useState","imgBack","load1","axios","ScreenHeading","toast","ScrollService","Animations","Footer","useForm","ContactMe","props","register","handleSubmit","reset","errors","disabledSubmitButton","setDisabledSubmitButton","fadeInScreenHandler","screen","fadeInScreen","id","animations","fadeInSubscription","currentScreenFadeIn","subscribe","name","setName","email","setEmail","message","setMessage","banner","setBanner","bool","setBool","unsubscribe","handleName","e","target","value","handleEmail","handleMessage","formSubmit","preventDefault","data","res","post","length","msg","error","status","success","err","console","log","getFormFields","textFieldOptions","your_name","type","placeholder","validations","required","your_email","pattern","subject","your_message","screenName","handleFormSubmission"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport imgBack from \"../../../src/images/im4.jpg\";\nimport load1 from \"../../../src/images/load2.gif\";\nimport axios from \"axios\";\nimport ScreenHeading from '../../utilities/ScreenHeading/ScreenHeading'\nimport { toast } from \"react-toastify\";\nimport './ContactMe.css'\nimport ScrollService from '../../utilities/ScrollService';\nimport Animations from '../../utilities/Animations';\nimport Footer from '../Home/Footer/Footer';\nimport { useForm } from 'react-hook-form'\n\nconst ContactMe = (props) => {\n\n  const { register, handleSubmit, reset, errors } = useForm();\n    const [disabledSubmitButton, setDisabledSubmitButton] = useState(false);\n\n  let fadeInScreenHandler = (screen) => {\n    if(screen.fadeInScreen !== props.id)\n    return;\n\n    Animations.animations.fadeInScreen(props.id);\n    };\n    const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [banner, setBanner] = useState(\"\");\n    const [bool, setBool] = useState(false);\n  \n    useEffect(() => {\n      return () => {\n          /* UNSUBSCRIBE THE SUBSCRIPTIONS */\n          fadeInSubscription.unsubscribe();\n      }\n  }, [fadeInSubscription]);\n\n    // handle inputs\n    const handleName = (e) => {\n      setName(e.target.value);\n    };\n  \n    const handleEmail = (e) => {\n      setEmail(e.target.value);\n    };\n  \n    const handleMessage = (e) => {\n      setMessage(e.target.value);\n    };\n  \n    const formSubmit = async (e) => {\n      e.preventDefault();\n  \n      \n      try {\n        let data = {\n          name,\n          email,\n          message,\n        };\n  \n        setBool(true);\n  \n        const res = await axios.post(`/contact`, data);\n  \n        if (name.length === 0 || email.length === 0 || message.length === 0) {\n          setBanner(res.data.msg);\n          toast.error(res.data.msg);\n          setBool(false);\n        } else if (res.status === 200) {\n          setBanner(res.data.msg);\n          toast.success(res.data.msg);\n          setBool(false);\n  \n          setName(\"\");\n          setEmail(\"\");\n          setMessage(\"\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  \n\n    const getFormFields = () => {\n      /*\n       FORM STATIC DATA */\n      let textFieldOptions = { your_name: { type: 'input', placeholder: 'Your Name', name: 'name', validations: { required: 'Your Name is required' } },\n                               your_email: { type: 'input', placeholder: 'Your Email Address', name: 'email', validations: { required: 'Your Email Address is required', pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ } },\n                               subject: { type: 'input', placeholder: 'Subject', name: 'subject', validations: { required: 'Subject is required' } },\n                               your_message: { type: 'text-area', placeholder: 'Your message', name: 'message', validations: { required: 'Your message is required' } }};   \n                          \n      return (\n          <div className=\"form-field-container\">\n              <div className=\"text-field-container\">\n                      <input type=\"text\" placeholder={textFieldOptions.your_name.placeholder} ref={register(textFieldOptions.your_name.validations)} name={textFieldOptions.your_name.name} className={`text-field ${ errors[textFieldOptions.your_name.name] ? 'red-border' : ''}`} />\n                      { errors[textFieldOptions.your_name.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_name.name].message }</span> </div> }\n              </div>\n              <div className=\"text-field-container\">\n                      <input type=\"text\" placeholder={textFieldOptions.your_email.placeholder} ref={register(textFieldOptions.your_email.validations)} name={textFieldOptions.your_email.name} className={`text-field ${ errors[textFieldOptions.your_email.name] ? 'red-border' : ''}`} />\n                      { errors[textFieldOptions.your_email.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_email.name].message }</span> <span> { (errors[textFieldOptions.your_email.name] && !errors[textFieldOptions.your_email.name].message) ? 'Email is invalid' : '' } </span> </div> }\n              </div>\n              <div className=\"text-field-container\">\n                      <input type=\"text\" placeholder={textFieldOptions.subject.placeholder} ref={register(textFieldOptions.subject.validations)} name={textFieldOptions.subject.name} className={`text-field ${ errors[textFieldOptions.subject.name] ? 'red-border' : ''}`} />\n                      { errors[textFieldOptions.subject.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.subject.name].message }</span> </div> }\n              </div>\n              <div className=\"text-field-container text-area-container\">\n                      <textarea placeholder={textFieldOptions.your_message.placeholder} ref={register(textFieldOptions.your_message.validations)} name={textFieldOptions.your_message.name} className={`text-field text-field-area ${ errors[textFieldOptions.your_message.name] ? 'red-border' : ''}`}></textarea>\n                      { errors[textFieldOptions.your_message.name] && <div className=\"text-field-error\"> <div className=\"error-pointer\"></div> <span> { errors[textFieldOptions.your_message.name].message }</span> </div> }\n              </div>\n          </div>\n      )\n  } \n\n\n    return (\n       \n      <div className=\"contact-me-container fade-in\" id={ props.id || ''}>\n      <ScreenHeading subHeading={ \"Let's Keep In Touch\"} title={ (props.screenName) ? props.screenName : '' } />\n      <div>\n      <div className=\"contact-me-map\">\n          <div className=\"contact-me-form\">\n              <div className=\"contact-form-heading\">\n                  <span>Get in Touch</span>\n              </div>\n              <form onSubmit={handleSubmit(handleFormSubmission)}>\n\n                  { getFormFields() }\n\n                  <button disabled={disabledSubmitButton} \n                  className={'contact-me-submit-btn primary-btn' + (disabledSubmitButton ? ' disable-submit-btn' : '')} \n                  type=\"submit\">Submit</button>\n              </form>\n          </div>\n      </div>\n      <Footer />\n      </div>\n  </div>\n    )\n}\n\nexport default ContactMe;\n"]},"metadata":{},"sourceType":"module"}